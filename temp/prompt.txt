# ガンマ評価スクリプト生成用・決定版プロンプト（2D/3D・3%/3mm/10%・三軸シフト最適化対応）

以下の指示をそのままコード生成AIに与えてください。
**2つのDICOM RTDOSEの比較**、**2D/3Dガンマ解析**、**三軸平行移動の最適化**、**異グリッド対応**、**TPS/PHITS含む汎用互換**を満たし、さらに実務QAで使える可視化・レポート・テスト・高速化まで網羅します。
（参考規約は `/phits-linac-validation/Readme.md` に合わせて命名等を微調整してください。）

---

## 役割

あなたは**医療物理とPython**に精通した開発者です。放射線治療QAで用いる**高信頼・再現性のある**ガンマ評価ツールを実装してください。

---

## 目的

* 2つの**DICOM RTDOSE**（例：TPS出力とPHITS/実測由来）を読み込み、**2D/3Dガンマインデックス**を計算します。
* **DD/DTA/Cutoff**を任意設定（既定：**3.0% / 3.0 mm / 10.0%**）、**global/local**両規格対応とします。
* **三軸シフト最適化**により、座標不一致を自動補正し**最良パスレート**を探索します。
* **異なるグリッドサイズ・原点・向き**でも正しく比較可能にします。

---

## 入出力仕様（CLI）

以下の引数を備えた**CUI**を実装してください（短縮形も可）。未指定は既定値を使用します。

* 必須入力

  * `--ref <path>`：基準RTDOSE（DICOM）
  * `--eval <path>`：比較対象RTDOSE（DICOM）

* 解析モード

  * `--mode {3d,2d}`（既定：`3d`）
  * `--plane {axial,sagittal,coronal}`（2D時）
  * `--plane-index <int>`（2D時、スライス番号指定。`--plane`と併用可）

* 評価条件

  * `--dd 3.0`（%）、`--dta 3.0`（mm）、`--cutoff 10.0`（%）
  * `--gamma-type {global,local}`（既定：`global`）
  * `--norm {global_max,max_ref,prescription=<Gy|cGy>,none}`（DD%の正規化基準）
  * `--cutoff-mask {ref,eval}`（カットオフをどちら基準で判定するか、既定：`ref`）
  * `--low-dose-exclusion <percent>`（任意の追加除外しきい値）

* シフト最適化（ON/OFF可能）

  * `--opt-shift {on,off}`（既定：`on`）
  * `--shift-range "x:-5:5:1,y:-5:5:1,z:-5:5:1"`（mm、start:end:step）
  * `--refine {none,coarse2fine,nelder-mead}`（初期総当たり→局所改善）

* グリッド・補間

  * `--spacing <sx,sy,sz>`（mm、共通評価グリッド。未指定は基準に合わせる）
  * `--interp {linear,bspline,nearest}`（既定：`linear`）

* ROI・マスク（任意）

  * `--mask-rtstruct <path>` と `--roi-name <str>`（複数指定可：繰り返し）
  * `--margin-mm <float>`（ROI膨張/収縮、負値で収縮）

* 出力

  * `--save-gamma-map <path>`（2DはPNG/TIFF、3DはNIfTI/MHD/NPZ）
  * `--save-dose-diff <path>`（差分線量マップの保存）
  * `--report <path>`（CSV/JSON/Markdownのサマリ）
  * `--log-level {INFO,DEBUG}`（既定：`INFO`）
  * `--seed <int>`（再現性確保）
  * `--threads <int>`、`--gpu {on,off}`（`cupy`対応が可能なら使用）
  * `--tolerance <float>`（浮動小数比較の許容）

---

## 機能要件

### 1) DICOM入出力と座標系

* `pydicom`でRTDOSEを読み込み、以下を厳密に解釈します。

  * `DoseGridScaling` に基づく実線量（Gy/cGy）復元
  * `ImagePositionPatient`, `ImageOrientationPatient`, `PixelSpacing`, `GridFrameOffsetVector` から**患者座標系（LPS）**への座標復元
  * `Modality == RTDOSE` の確認、単位整合性チェック
* **TPS/PHITSなど由来に依存しない**標準タグ解釈とします。

### 2) 異グリッド対応（リサンプリング）

* 比較は**共通評価グリッド**上で行います（既定は基準RTDOSEのグリッド）。
* 評価対象（`eval`）を`scipy.ndimage` または `SimpleITK`/`ITK`で**連続空間に補間**して共通グリッドに写像します。
* 補間法は`--interp`に従い、線量保存性に配慮します（必要に応じエッジ処理・外挿の扱いを明示）。

### 3) ガンマインデックス計算（2D/3D）

* **DD（%）**、**DTA（mm）**、**Cutoff（%）**に準拠し、**global/local**両方に対応します。
* **カットオフ**未満の評価点は不評価とし、母数から除外します。
* 3Dでは**ユークリッド距離**、2Dでは指定平面内距離でDTAを評価します。
* **距離変換（distance transform）**、**KD-tree**等によりDTA探索を高速化してください。
* パスレート（%）、平均・中央値・最大ガンマ、p95などを算出します。
* 3D/2Dとも**ガンマ=1等値線**の扱いを明確化し、閾値の不等号（<, ?）を仕様に固定します（既定：**?1.0合格**）。

### 4) 三軸シフト最適化

* `eval`を**x/y/z方向に平行移動**し、各位置でガンマ→パスレートを計算、**最良パスレート**のシフトと値を返します。
* 総当たり（`--shift-range`）後、任意で**局所探索**（`--refine`）を行います。
* 各シフトの結果は**探索ログ（CSV）**として保存可能にします。

### 5) 2D評価

* `--plane` と `--plane-index` で断面指定（axial/sagittal/coronal）。
* 2Dでも3Dで得た**最適シフト**を適用してから断面可視化を行います。

### 6) ROIベース評価（任意）

* RTSTRUCT＋ROI名で**マスク**を作成し、その内部のみ評価可能とします（複数ROIの和/積の指定が可能だと望ましい）。
* `--margin-mm` で膨張/収縮をサポートします。

### 7) 可視化・レポート

* **2D図**：

  * ガンママップ（カラーバー、ガンマ=1等値線、>1領域のハッチ）
  * 線量差（%）マップ、DTAマップ（任意）
  * 指定線上の**線量プロファイル比較**（両線量・差分）
* **3D**：統計表＋ガンマボリューム保存（NIfTI/MHD/NPZ）。
* **レポート**：CSV/JSON/Markdownで**すべての解析条件・メタ情報**（DICOM主要タグ、正規化方式、カットオフ、補間、シフト結果など）を保存します。
* 図表の**軸ラベル・単位**、色凡例、合格条件を明示します。

### 8) 高速化と大規模データ対応

* `numpy`ベクトル化、`numba`によるJIT（内側ループ）を実装します。
* メモリ制約に応じた**タイル分割/チャンク処理**、マルチスレッド（`--threads`）を実装します。
* 任意で`cupy`によるGPU計算（`--gpu on`）に対応可能とします（未対応環境では自動でCPUへフォールバック）。

### 9) 例外処理・堅牢性

* ファイル欠如、`Modality`不正、`DoseGridScaling`欠落、座標余弦の非直交などを**わかりやすい例外**で停止します。
* 単位（Gy/cGy）混在時の自動判定・警告、Cutoffにより有効体素が少ない場合の警告を出します。
* 乱数を使う部分（サンプリング等）があれば`--seed`で固定可能にします。

### 10) 品質保証（テスト）

* `pytest`で単体テストを実装します。

  * **恒等テスト**：同一線量→パスレート?100%
  * **既知シフト**：合成データに±2 mmなどを与え、最適シフト推定が正しいこと
  * **global/local**切替、補間法変更、異グリッド、Cutoffの回帰テスト
* **ベンチマーク**：体積サイズ・スレッド数・GPU有無で時間/メモリを記録します。

### 11) アーキテクチャ

* `main.py`：CLI・ワークフロー制御
* `io_dicom.py`：DICOM読込、座標・変換行列、グリッド生成、リサンプリング
* `gamma.py`：ガンマ本体（2D/3D、global/local、距離場）
* `optimize.py`：シフト探索（総当たり＋任意の局所探索）
* `masking.py`：RTSTRUCT→マスク生成、膨張/収縮
* `viz.py`：可視化（2D/3D保存、プロファイル）
* `report.py`：CSV/JSON/Markdown出力、探索ログ
* `tests/`：pytest一式
* ログは`logging`で`INFO/DEBUG`切替、設定はJSONに保存して**完全再現**可能にします。

---

## 既定値

* `DD=3.0%`, `DTA=3.0 mm`, `Cutoff=10.0%`、`gamma-type=global`、`mode=3d`、`interp=linear`、`cutoff-mask=ref`、`opt-shift=on`。
* 合格判定は**ガンマ?1.0**です。

---

## エッジケース・仕様の固定

* 境界外の補間結果やデータ欠損は**無効**扱い（母数から除外）とします。
* DTA探索半径は`--dta`を上限とし、距離場で高速に評価します。
* 異方性ボクセル・斜入射向き（ImageOrientationPatient）に対する**正しいLPS座標化**を保証します。
* 2D断面は**最適シフト**を適用した体積から切り出します。
* プロファイル比較はユーザ指定の線（2点指定または既定の中心線）に対応します。

---

## 参考と整合

* `/phits-linac-validation/Readme.md` にある出力例・命名規約・図の注記様式に合わせ、

  * ファイル名（例：`gamma_3p3mm10_cutoff_ref_global_axial_iNN.png`）
  * Markdownレポートの節構成
    を可能な範囲で**合わせ込み**ます（該当箇所は設定化）。

---

## 受け入れ基準（Doneの定義）

* CLIで**2D/3Dガンマ評価**が実行でき、**三軸シフト最適化**により**最良パスレート**と**最適シフト(mm)**が出力されます。
* **異グリッド・異座標系**のRTDOSEでも正しく評価できます。
* サマリ（パスレート、統計指標）、ガンマ/差分マップ、探索ログ、解析設定/メタ情報が保存されます。
* `pytest`がグリーンで、基本ベンチマークが所要時間内で完了します。

---

## 任意だが推奨の追加

* **多条件一括評価**：`--criteria-list "3/3/10,2/2/10,3/2/10"`
* **等価/重み付きガンマ**（低線量領域の重み調整）
* **バッチ処理**（入力CSVで複数症例を一括評価）
* **簡易GUI**（`streamlit`）
* **Dockerfile**で環境固定、`pyproject.toml`整備
* **DICOMメタの完全ログ**、匿名化オプション

---

## 実装ヒント

* 3D座標系は**原点（IPP）＋方向余弦（IOP）＋ピクセル間隔＋GFOV**からアフィン行列を構築します。
* DTAは**2値「等価線量差?DD%」集合の距離変換**で高速化できます（近傍探索の短絡）。
* シフト総当たりはメッシュ化（`np.arange`）→ベクトル化で一括評価し、上位候補のみ局所探索します。

---

上記仕様に従い、**保守性・再現性・速度**を重視してPython実装を作成してください。生成後は小さめの症例で動作確認し、`/phits-linac-validation/Readme.md` の様式に沿って出力の体裁を微調整してください。


## 参考
過去に作ったガンマ解析を見本として作ってください。"/phits-linac-validation/Readme.md" を読んでください。